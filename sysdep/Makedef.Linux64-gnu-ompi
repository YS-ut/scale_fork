#
# ------ FOR Linux 64bit & gfortran4.3 & OpenMPI1.3 -----
#

##### for computation

#OPT         = -march=corei7 -mtune=corei7
FFLAGS_FAST = -O3 -m64 $(OPT) \
              -pedantic-errors -fimplicit-none -fmodule-private \
              -fconvert=big-endian -frecord-marker=4            \
              -funroll-all-loops -fprefetch-loop-arrays

FFLAGS_DEBUG = -O0 -Wuninitialized -m64 \
               -pedantic-errors -fimplicit-none -fmodule-private \
               -fconvert=big-endian -frecord-marker=4            \
               -ffpe-trap=invalid,zero,overflow -finit-integer=-32768 -finit-real=nan -finit-logical=false -finit-character=9                    \
               -Wall -Wextra -Warray-temporaries -Wcharacter-truncation -Wconversion-extra -Wimplicit-interface -Wimplicit-procedure -Wunderflow \
               -fcheck=all -g -fbacktrace -fall-intrinsics

#               -DDEBUG

FC     = mpif90
FFLAGS = $(FFLAGS_FAST)
#FFLAGS = $(FFLAGS_DEBUG)
FFLAGS += -x f95-cpp-input -I/usr/lib64/mpi/gcc/openmpi/lib64

FFLAGS_DYN = $(FFLAGS)

# if gcc < 4.5: -M, else if gcc >= 4.6: -J 
MODDIROPT ?= -M

CC     = mpicc
CFLAGS = -O3

LD     = $(FC)
# to avoid "-x f95-cpp-input" option
LFLAGS = $(FFLAGS_FAST)
#LFLAGS = $(FFLAGS_DEBUG)

###### NetCDF library
NETCDF_INCLUDE ?= 
NETCDF_LIBS    ?= -lnetcdf

##### for frontend
AR      = ar
ARFLAGS = r
RANLIB  = ranlib
JOBSUB  = sh
