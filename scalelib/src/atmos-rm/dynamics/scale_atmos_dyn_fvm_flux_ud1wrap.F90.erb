% # -*- f90 -*-
% # vi: set sw=4 ts=8:
!-------------------------------------------------------------------------------
!> module scale_atmos_dyn_fvm_flux_ud1wrap
!!
!! @par Description
!!          FVM flux scheme with the ud1 order
!!
!! @author Team SCALE
!!
!! @par History
!! @li      2016-04-18 (S.Nishizawa) [new]
!!
!<
!-------------------------------------------------------------------------------
! Warning: This file was generated from <%=__FILE__%>.
!          Do not edit this file.
!-------------------------------------------------------------------------------
module scale_atmos_dyn_fvm_flux_ud1wrap
  !-----------------------------------------------------------------------------
  !
  !++ used modules
  !
  use scale_precision
  use scale_stdio
  use scale_prof
  use scale_grid_index
  use scale_index
  use scale_tracer
  use scale_process
#ifdef DEBUG
  use scale_debug, only: &
     CHECK
  use scale_const, only: &
     UNDEF  => CONST_UNDEF, &
     IUNDEF => CONST_UNDEF2
#endif
  use scale_atmos_dyn_fvm_flux_ud1
  
  !-----------------------------------------------------------------------------
  implicit none
  private
  !-----------------------------------------------------------------------------
  !
  !++ Public procedure
  !
  public :: ATMOS_DYN_FVM_flux_valueW_Z_ud1wrap

  public :: ATMOS_DYN_FVM_fluxZ_XYZ_ud1wrap
  public :: ATMOS_DYN_FVM_fluxX_XYZ_ud1wrap
  public :: ATMOS_DYN_FVM_fluxY_XYZ_ud1wrap

  public :: ATMOS_DYN_FVM_fluxZ_XYW_ud1wrap
  public :: ATMOS_DYN_FVM_fluxJ13_XYW_ud1wrap
  public :: ATMOS_DYN_FVM_fluxJ23_XYW_ud1wrap
  public :: ATMOS_DYN_FVM_fluxX_XYW_ud1wrap
  public :: ATMOS_DYN_FVM_fluxY_XYW_ud1wrap

  public :: ATMOS_DYN_FVM_fluxZ_UYZ_ud1wrap
  public :: ATMOS_DYN_FVM_fluxJ13_UYZ_ud1wrap
  public :: ATMOS_DYN_FVM_fluxJ23_UYZ_ud1wrap
  public :: ATMOS_DYN_FVM_fluxX_UYZ_ud1wrap
  public :: ATMOS_DYN_FVM_fluxY_UYZ_ud1wrap

  public :: ATMOS_DYN_FVM_fluxZ_XVZ_ud1wrap
  public :: ATMOS_DYN_FVM_fluxJ13_XVZ_ud1wrap
  public :: ATMOS_DYN_FVM_fluxJ23_XVZ_ud1wrap
  public :: ATMOS_DYN_FVM_fluxX_XVZ_ud1wrap
  public :: ATMOS_DYN_FVM_fluxY_XVZ_ud1wrap

  !-----------------------------------------------------------------------------
  !
  !++ Public parameters & variables
  !
  !-----------------------------------------------------------------------------
  !
  !++ Private procedure
  !
  !-----------------------------------------------------------------------------
  !
  !++ Private parameters & variables
  !

contains
  !-----------------------------------------------------------------------------
  !> value at XYW
!OCL SERIAL
  subroutine ATMOS_DYN_FVM_flux_valueW_Z_ud1wrap( &
       valW,             &
       mflx, val, GSQRT, &
       CDZ               )
    implicit none

    real(RP), intent(out) :: valW (KA)
    real(RP), intent(in)  :: mflx (KA)
    real(RP), intent(in)  :: val  (KA)
    real(RP), intent(in)  :: GSQRT(KA)
    real(RP), intent(in)  :: CDZ  (KA)

    call ATMOS_DYN_FVM_flux_valueW_Z_ud1( &
       valW,             &
       mflx, val, GSQRT, &
       CDZ               )
    return
  end subroutine ATMOS_DYN_FVM_flux_ValueW_Z_ud1wrap

  !-----------------------------------------------------------------------------
  !> calculation z-flux at XYZ
  subroutine ATMOS_DYN_FVM_fluxZ_XYZ_ud1wrap( &
       flux,              &
       mflx, val, GSQRT,  &
       num_diff,          &
       CDZ,               &
       IIS, IIE, JJS, JJE )
    implicit none

    real(RP), intent(out) :: flux    (KA,IA,JA)
    real(RP), intent(in)  :: mflx    (KA,IA,JA)
    real(RP), intent(in)  :: val     (KA,IA,JA)
    real(RP), intent(in)  :: GSQRT   (KA,IA,JA)
    real(RP), intent(in)  :: num_diff(KA,IA,JA)
    real(RP), intent(in)  :: CDZ     (KA)
    integer,  intent(in)  :: IIS, IIE, JJS, JJE

    call ATMOS_DYN_FVM_fluxZ_XYZ_ud1( &
       flux,              &
       mflx, val, GSQRT,  &
       CDZ,               &
       IIS, IIE, JJS, JJE )
    return
  end subroutine ATMOS_DYN_FVM_fluxZ_XYZ_ud1wrap
<% [
     ["X", 1, 0],
     ["Y", 0, 1]
   ].each do |dir,i,j|
%>
  !-----------------------------------------------------------------------------
  !> calculation <%=dir%>-flux at XYZ
  subroutine ATMOS_DYN_FVM_flux<%=dir%>_XYZ_ud1wrap( &
       flux,              &
       mflx, val, GSQRT,  &
       num_diff,          &
       CDZ,               &
       IIS, IIE, JJS, JJE )
    implicit none

    real(RP), intent(out) :: flux    (KA,IA,JA)
    real(RP), intent(in)  :: mflx    (KA,IA,JA)
    real(RP), intent(in)  :: val     (KA,IA,JA)
    real(RP), intent(in)  :: GSQRT   (KA,IA,JA)
    real(RP), intent(in)  :: num_diff(KA,IA,JA)
    real(RP), intent(in)  :: CDZ(KA)
    integer,  intent(in)  :: IIS, IIE, JJS, JJE

    call ATMOS_DYN_FVM_flux<%=dir%>_XYZ_ud1( &
       flux,              &
       mflx, val, GSQRT,  &
       CDZ,               &
       IIS, IIE, JJS, JJE )
    return
  end subroutine ATMOS_DYN_FVM_flux<%=dir%>_XYZ_ud1wrap
<% end %>
<%# end X Y loop %>
  !-----------------------------------------------------------------------------
  !> calculation z-flux at XYW
  subroutine ATMOS_DYN_FVM_fluxZ_XYW_ud1wrap( &
       flux,              &
       mom, val, DENS,    &
       GSQRT, J33G,       &
       num_diff,          &
       CDZ, FDZ,          &
       dtrk,              &
       IIS, IIE, JJS, JJE )
    implicit none

    real(RP), intent(out) :: flux    (KA,IA,JA)
    real(RP), intent(in)  :: mom     (KA,IA,JA)
    real(RP), intent(in)  :: val     (KA,IA,JA)
    real(RP), intent(in)  :: DENS    (KA,IA,JA)
    real(RP), intent(in)  :: GSQRT   (KA,IA,JA)
    real(RP), intent(in)  :: J33G
    real(RP), intent(in)  :: num_diff(KA,IA,JA)
    real(RP), intent(in)  :: CDZ     (KA)
    real(RP), intent(in)  :: FDZ     (KA-1)
    real(RP), intent(in)  :: dtrk
    integer,  intent(in)  :: IIS, IIE, JJS, JJE

    call ATMOS_DYN_FVM_fluxZ_XYW_ud1( &
       flux,              &
       mom, val, DENS,    &
       GSQRT, J33G,       &
       CDZ, FDZ,          &
       dtrk,              &
       IIS, IIE, JJS, JJE )
    return
  end subroutine ATMOS_DYN_FVM_fluxZ_XYW_ud1wrap

<% [
     ["J13", "UYZ", 1,0],
     ["J23", "XVZ", 0,1]
   ].each do |dir, uv, i, j|
%>
  !-----------------------------------------------------------------------------
  !> calculation <%=dir%>-flux at XYW
  subroutine ATMOS_DYN_FVM_flux<%=dir%>_XYW_ud1wrap( &
       flux,              &
       mom, val, DENS,    &
       GSQRT, <%=dir%>G, MAPF, &
       CDZ,               &
       IIS, IIE, JJS, JJE )
    implicit none

    real(RP), intent(out) :: flux    (KA,IA,JA)
    real(RP), intent(in)  :: mom     (KA,IA,JA)
    real(RP), intent(in)  :: val     (KA,IA,JA)
    real(RP), intent(in)  :: DENS    (KA,IA,JA)
    real(RP), intent(in)  :: GSQRT   (KA,IA,JA)
    real(RP), intent(in)  :: <%=dir%>G    (KA,IA,JA)
    real(RP), intent(in)  :: MAPF    (   IA,JA,2)
    real(RP), intent(in)  :: CDZ     (KA)
    integer,  intent(in)  :: IIS, IIE, JJS, JJE

    call ATMOS_DYN_FVM_flux<%=dir%>_XYW_ud1( &
       flux,              &
       mom, val, DENS,    &
       GSQRT, <%=dir%>G, MAPF, &
       CDZ,               &
       IIS, IIE, JJS, JJE )
    return
  end subroutine ATMOS_DYN_FVM_flux<%=dir%>_XYW_ud1wrap
<% end # J13, J23 loop %>

<% [
     ["X", "UY", 1, 0],
     ["Y", "XV", 0, 1]
   ].each do |dir, xyz, i, j|
%>
  !-----------------------------------------------------------------------------
  !> calculation <%=dir%>-flux at XYW
  subroutine ATMOS_DYN_FVM_flux<%=dir%>_XYW_ud1wrap( &
       flux,              &
       mom, val, DENS,    &
       GSQRT, MAPF,       &
       num_diff,          &
       CDZ,               &
       IIS, IIE, JJS, JJE )
    implicit none

    real(RP), intent(out) :: flux    (KA,IA,JA)
    real(RP), intent(in)  :: mom     (KA,IA,JA)
    real(RP), intent(in)  :: val     (KA,IA,JA)
    real(RP), intent(in)  :: DENS    (KA,IA,JA)
    real(RP), intent(in)  :: GSQRT   (KA,IA,JA)
    real(RP), intent(in)  :: MAPF    (   IA,JA,2)
    real(RP), intent(in)  :: num_diff(KA,IA,JA)
    real(RP), intent(in)  :: CDZ     (KA)
    integer,  intent(in)  :: IIS, IIE, JJS, JJE

    call ATMOS_DYN_FVM_flux<%=dir%>_XYW_ud1( &
       flux,              &
       mom, val, DENS,    &
       GSQRT, MAPF,       &
       CDZ,               &
       IIS, IIE, JJS, JJE )
    return
  end subroutine ATMOS_DYN_FVM_flux<%=dir%>_XYW_ud1wrap
<% end # X Y loop %>

<% [
     ["UY", 1, 0],
     ["XV", 0, 1],
   ].each do |uv, i, j|
%>
  !-----------------------------------------------------------------------------
  !> calculation z-flux at <%=uv%>
  subroutine ATMOS_DYN_FVM_fluxZ_<%=uv%>Z_ud1wrap( &
       flux,              &
       mom, val, DENS,    &
       GSQRT, J33G,       &
       num_diff,          &
       CDZ,               &
       IIS, IIE, JJS, JJE )
    implicit none

    real(RP), intent(out) :: flux    (KA,IA,JA)
    real(RP), intent(in)  :: mom     (KA,IA,JA)
    real(RP), intent(in)  :: val     (KA,IA,JA)
    real(RP), intent(in)  :: DENS    (KA,IA,JA)
    real(RP), intent(in)  :: GSQRT   (KA,IA,JA)
    real(RP), intent(in)  :: J33G
    real(RP), intent(in)  :: num_diff(KA,IA,JA)
    real(RP), intent(in)  :: CDZ     (KA)
    integer,  intent(in)  :: IIS, IIE, JJS, JJE

    call ATMOS_DYN_FVM_fluxZ_<%=uv%>Z_ud1( &
       flux,              &
       mom, val, DENS,    &
       GSQRT, J33G,       &
       CDZ,               &
       IIS, IIE, JJS, JJE )
    return
  end subroutine ATMOS_DYN_FVM_fluxZ_<%=uv%>Z_ud1wrap
<% [
     ["J13", "UYZ", 2],
     ["J23", "XVZ", 1]
   ].each do |dir, xyz, im|
%>
  !-----------------------------------------------------------------------------
  !> calculation <%=dir%>-flux at <%=uv%>Z
  subroutine ATMOS_DYN_FVM_flux<%=dir%>_<%=uv%>Z_ud1wrap( &
       flux,              &
       mom, val, DENS,    &
       GSQRT, <%=dir%>G, MAPF, &
       CDZ,               &
       IIS, IIE, JJS, JJE )
    implicit none

    real(RP), intent(out) :: flux    (KA,IA,JA)
    real(RP), intent(in)  :: mom     (KA,IA,JA)
    real(RP), intent(in)  :: val     (KA,IA,JA)
    real(RP), intent(in)  :: DENS    (KA,IA,JA)
    real(RP), intent(in)  :: GSQRT   (KA,IA,JA)
    real(RP), intent(in)  :: <%=dir%>G    (KA,IA,JA)
    real(RP), intent(in)  :: MAPF    (   IA,JA,2)
    real(RP), intent(in)  :: CDZ     (KA)
    integer,  intent(in)  :: IIS, IIE, JJS, JJE

    call ATMOS_DYN_FVM_flux<%=dir%>_<%=uv%>Z_ud1( &
       flux,              &
       mom, val, DENS,    &
       GSQRT, <%=dir%>G, MAPF, &
       CDZ,               &
       IIS, IIE, JJS, JJE )
    return
  end subroutine ATMOS_DYN_FVM_flux<%=dir%>_<%=uv%>Z_ud1wrap
<% end # J13 J23 loop %>
<% [
     ["X", 1, 0],
     ["Y", 0, 1]
   ].each do |dir, ii, jj|
%>
  !-----------------------------------------------------------------------------
  !> calculation <%=dir%>-flux at <%=uv%>
  subroutine ATMOS_DYN_FVM_flux<%=dir%>_<%=uv%>Z_ud1wrap( &
       flux,              &
       mom, val, DENS,    &
       GSQRT, MAPF,       &
       num_diff,          &
       CDZ,               &
       IIS, IIE, JJS, JJE )
    implicit none

    real(RP), intent(out) :: flux    (KA,IA,JA)
    real(RP), intent(in)  :: mom     (KA,IA,JA)
    real(RP), intent(in)  :: val     (KA,IA,JA)
    real(RP), intent(in)  :: DENS    (KA,IA,JA)
    real(RP), intent(in)  :: GSQRT   (KA,IA,JA)
    real(RP), intent(in)  :: MAPF    (   IA,JA,2)
    real(RP), intent(in)  :: num_diff(KA,IA,JA)
    real(RP), intent(in)  :: CDZ     (KA)
    integer,  intent(in)  :: IIS, IIE, JJS, JJE

    call ATMOS_DYN_FVM_flux<%=dir%>_<%=uv%>Z_ud1( &
       flux,              &
       mom, val, DENS,    &
       GSQRT, MAPF,       &
       CDZ,               &
       IIS, IIE, JJS, JJE )
    return
  end subroutine ATMOS_DYN_FVM_flux<%=dir%>_<%=uv%>Z_ud1wrap
<% end %>
<%# -- X Y loop ------- %>
<% end %>
<%# -- U V loop ------- %>


end module scale_atmos_dyn_fvm_flux_ud1wrap

!--
! vi<%=":"%>set readonly sw=4 ts=8
!
!Local Variables<%=":"%>
!mode: f90
!buffer-read-only: t
!End:
!
!++
